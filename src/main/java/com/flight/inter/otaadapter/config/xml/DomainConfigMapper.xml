<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flight.inter.otaadapter.config.dao.DomainConfigMapper">
  <resultMap id="BaseResultMap" type="com.flight.inter.otaadapter.config.model.DomainConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="domain_name" jdbcType="VARCHAR" property="domainName" />
    <result column="domain_group" jdbcType="VARCHAR" property="domainGroup" />
    <result column="zh_name" jdbcType="VARCHAR" property="zhName" />
    <result column="sabre_session_reuseName" jdbcType="VARCHAR" property="sabreSessionReusename" />
    <result column="common_show_flag" jdbcType="TINYINT" property="commonShowFlag" />
    <result column="white_black_flag" jdbcType="TINYINT" property="whiteBlackFlag" />
    <result column="sale_info_flag" jdbcType="TINYINT" property="saleInfoFlag" />
    <result column="on_line_flag" jdbcType="TINYINT" property="onLineFlag" />
    <result column="search_fare_flag" jdbcType="TINYINT" property="searchFareFlag" />
    <result column="fare_compare_gds_flag" jdbcType="TINYINT" property="fareCompareGdsFlag" />
    <result column="fare_compare_api_flag" jdbcType="TINYINT" property="fareCompareApiFlag" />
    <result column="policy_group_flag" jdbcType="TINYINT" property="policyGroupFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, domain_name, domain_group, zh_name, sabre_session_reuseName, common_show_flag, 
    white_black_flag, sale_info_flag, on_line_flag, search_fare_flag, fare_compare_gds_flag, 
    fare_compare_api_flag, policy_group_flag
  </sql>
  <select id="selectByExample" parameterType="com.flight.inter.otaadapter.config.model.DomainConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from domain_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from domain_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from domain_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.flight.inter.otaadapter.config.model.DomainConfigExample">
    delete from domain_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.flight.inter.otaadapter.config.model.DomainConfig">
    insert into domain_config (id, domain_name, domain_group, 
      zh_name, sabre_session_reuseName, common_show_flag, 
      white_black_flag, sale_info_flag, on_line_flag, 
      search_fare_flag, fare_compare_gds_flag, fare_compare_api_flag, 
      policy_group_flag)
    values (#{id,jdbcType=BIGINT}, #{domainName,jdbcType=VARCHAR}, #{domainGroup,jdbcType=VARCHAR}, 
      #{zhName,jdbcType=VARCHAR}, #{sabreSessionReusename,jdbcType=VARCHAR}, #{commonShowFlag,jdbcType=TINYINT}, 
      #{whiteBlackFlag,jdbcType=TINYINT}, #{saleInfoFlag,jdbcType=TINYINT}, #{onLineFlag,jdbcType=TINYINT}, 
      #{searchFareFlag,jdbcType=TINYINT}, #{fareCompareGdsFlag,jdbcType=TINYINT}, #{fareCompareApiFlag,jdbcType=TINYINT}, 
      #{policyGroupFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.flight.inter.otaadapter.config.model.DomainConfig">
    insert into domain_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="domainName != null">
        domain_name,
      </if>
      <if test="domainGroup != null">
        domain_group,
      </if>
      <if test="zhName != null">
        zh_name,
      </if>
      <if test="sabreSessionReusename != null">
        sabre_session_reuseName,
      </if>
      <if test="commonShowFlag != null">
        common_show_flag,
      </if>
      <if test="whiteBlackFlag != null">
        white_black_flag,
      </if>
      <if test="saleInfoFlag != null">
        sale_info_flag,
      </if>
      <if test="onLineFlag != null">
        on_line_flag,
      </if>
      <if test="searchFareFlag != null">
        search_fare_flag,
      </if>
      <if test="fareCompareGdsFlag != null">
        fare_compare_gds_flag,
      </if>
      <if test="fareCompareApiFlag != null">
        fare_compare_api_flag,
      </if>
      <if test="policyGroupFlag != null">
        policy_group_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="domainName != null">
        #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="domainGroup != null">
        #{domainGroup,jdbcType=VARCHAR},
      </if>
      <if test="zhName != null">
        #{zhName,jdbcType=VARCHAR},
      </if>
      <if test="sabreSessionReusename != null">
        #{sabreSessionReusename,jdbcType=VARCHAR},
      </if>
      <if test="commonShowFlag != null">
        #{commonShowFlag,jdbcType=TINYINT},
      </if>
      <if test="whiteBlackFlag != null">
        #{whiteBlackFlag,jdbcType=TINYINT},
      </if>
      <if test="saleInfoFlag != null">
        #{saleInfoFlag,jdbcType=TINYINT},
      </if>
      <if test="onLineFlag != null">
        #{onLineFlag,jdbcType=TINYINT},
      </if>
      <if test="searchFareFlag != null">
        #{searchFareFlag,jdbcType=TINYINT},
      </if>
      <if test="fareCompareGdsFlag != null">
        #{fareCompareGdsFlag,jdbcType=TINYINT},
      </if>
      <if test="fareCompareApiFlag != null">
        #{fareCompareApiFlag,jdbcType=TINYINT},
      </if>
      <if test="policyGroupFlag != null">
        #{policyGroupFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.flight.inter.otaadapter.config.model.DomainConfigExample" resultType="java.lang.Integer">
    select count(*) from domain_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update domain_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.domainName != null">
        domain_name = #{record.domainName,jdbcType=VARCHAR},
      </if>
      <if test="record.domainGroup != null">
        domain_group = #{record.domainGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.zhName != null">
        zh_name = #{record.zhName,jdbcType=VARCHAR},
      </if>
      <if test="record.sabreSessionReusename != null">
        sabre_session_reuseName = #{record.sabreSessionReusename,jdbcType=VARCHAR},
      </if>
      <if test="record.commonShowFlag != null">
        common_show_flag = #{record.commonShowFlag,jdbcType=TINYINT},
      </if>
      <if test="record.whiteBlackFlag != null">
        white_black_flag = #{record.whiteBlackFlag,jdbcType=TINYINT},
      </if>
      <if test="record.saleInfoFlag != null">
        sale_info_flag = #{record.saleInfoFlag,jdbcType=TINYINT},
      </if>
      <if test="record.onLineFlag != null">
        on_line_flag = #{record.onLineFlag,jdbcType=TINYINT},
      </if>
      <if test="record.searchFareFlag != null">
        search_fare_flag = #{record.searchFareFlag,jdbcType=TINYINT},
      </if>
      <if test="record.fareCompareGdsFlag != null">
        fare_compare_gds_flag = #{record.fareCompareGdsFlag,jdbcType=TINYINT},
      </if>
      <if test="record.fareCompareApiFlag != null">
        fare_compare_api_flag = #{record.fareCompareApiFlag,jdbcType=TINYINT},
      </if>
      <if test="record.policyGroupFlag != null">
        policy_group_flag = #{record.policyGroupFlag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update domain_config
    set id = #{record.id,jdbcType=BIGINT},
      domain_name = #{record.domainName,jdbcType=VARCHAR},
      domain_group = #{record.domainGroup,jdbcType=VARCHAR},
      zh_name = #{record.zhName,jdbcType=VARCHAR},
      sabre_session_reuseName = #{record.sabreSessionReusename,jdbcType=VARCHAR},
      common_show_flag = #{record.commonShowFlag,jdbcType=TINYINT},
      white_black_flag = #{record.whiteBlackFlag,jdbcType=TINYINT},
      sale_info_flag = #{record.saleInfoFlag,jdbcType=TINYINT},
      on_line_flag = #{record.onLineFlag,jdbcType=TINYINT},
      search_fare_flag = #{record.searchFareFlag,jdbcType=TINYINT},
      fare_compare_gds_flag = #{record.fareCompareGdsFlag,jdbcType=TINYINT},
      fare_compare_api_flag = #{record.fareCompareApiFlag,jdbcType=TINYINT},
      policy_group_flag = #{record.policyGroupFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.flight.inter.otaadapter.config.model.DomainConfig">
    update domain_config
    <set>
      <if test="domainName != null">
        domain_name = #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="domainGroup != null">
        domain_group = #{domainGroup,jdbcType=VARCHAR},
      </if>
      <if test="zhName != null">
        zh_name = #{zhName,jdbcType=VARCHAR},
      </if>
      <if test="sabreSessionReusename != null">
        sabre_session_reuseName = #{sabreSessionReusename,jdbcType=VARCHAR},
      </if>
      <if test="commonShowFlag != null">
        common_show_flag = #{commonShowFlag,jdbcType=TINYINT},
      </if>
      <if test="whiteBlackFlag != null">
        white_black_flag = #{whiteBlackFlag,jdbcType=TINYINT},
      </if>
      <if test="saleInfoFlag != null">
        sale_info_flag = #{saleInfoFlag,jdbcType=TINYINT},
      </if>
      <if test="onLineFlag != null">
        on_line_flag = #{onLineFlag,jdbcType=TINYINT},
      </if>
      <if test="searchFareFlag != null">
        search_fare_flag = #{searchFareFlag,jdbcType=TINYINT},
      </if>
      <if test="fareCompareGdsFlag != null">
        fare_compare_gds_flag = #{fareCompareGdsFlag,jdbcType=TINYINT},
      </if>
      <if test="fareCompareApiFlag != null">
        fare_compare_api_flag = #{fareCompareApiFlag,jdbcType=TINYINT},
      </if>
      <if test="policyGroupFlag != null">
        policy_group_flag = #{policyGroupFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flight.inter.otaadapter.config.model.DomainConfig">
    update domain_config
    set domain_name = #{domainName,jdbcType=VARCHAR},
      domain_group = #{domainGroup,jdbcType=VARCHAR},
      zh_name = #{zhName,jdbcType=VARCHAR},
      sabre_session_reuseName = #{sabreSessionReusename,jdbcType=VARCHAR},
      common_show_flag = #{commonShowFlag,jdbcType=TINYINT},
      white_black_flag = #{whiteBlackFlag,jdbcType=TINYINT},
      sale_info_flag = #{saleInfoFlag,jdbcType=TINYINT},
      on_line_flag = #{onLineFlag,jdbcType=TINYINT},
      search_fare_flag = #{searchFareFlag,jdbcType=TINYINT},
      fare_compare_gds_flag = #{fareCompareGdsFlag,jdbcType=TINYINT},
      fare_compare_api_flag = #{fareCompareApiFlag,jdbcType=TINYINT},
      policy_group_flag = #{policyGroupFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>